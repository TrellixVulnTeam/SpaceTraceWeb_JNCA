# Save this file as .env (used by conf settings and virtualenv postactivate/postdeactivate scripts)
# Notes: Use single quotes around strings you don't need to escape things on.. Double quotes or nothing otherwise
DEBUG=true
ENV_DEFINED=true
PROJECT_NAME=spacetrace
DJANGO_SRC_NAME=bcfsrc
DEPLOY_TYPE=stg
# This is where your project lives
# On production it will probably be here => /var/django/${PROJECT_NAME}-${DEPLOY_TYPE}
PROJECT_PATH=${HOME}/projects/${PROJECT_NAME}-${DEPLOY_TYPE}
DJANGO_PROJECT_ROOT=${PROJECT_PATH}/${DJANGO_SRC_NAME}
DJANGO_SETTINGS_MODULE=bcfsrc.SpaceTraceWeb
PYENV_VERSION='3.6.4'
PYTHON_PATH=${HOME}/.pyenv/versions/${PYENV_VERSION}/bin/python3

# On Production restore/backup path may be different or just
# "${HOME}/backups/${PROJECT_NAME}-${DEPLOY_TYPE}"

BACKUP_PATH=${HOME}/backups/${PROJECT_NAME}-${DEPLOY_TYPE}
RESTORE_PATH=${PROJECT_PATH}/backups
# Common place for static, media, protected, .... file space (generally /var/www)
FILE_POOL1=${PROJECT_PATH}/scratch_data
# /var/www/static (production/staging)
STATIC_PATH=public_html/static
STATIC_ROOT=${FILE_POOL1}/${STATIC_PATH}
# /var/www/media (production/staging)
MEDIA_PATH=public_html/media
## New style for defining file spaces.
#MEDIA_ROOT=${FILE_POOL1}/${MEDIA_PATH}
## BAD LAYOUT, but must match our settings/base.py
MEDIA_ROOT=${PROJECT_PATH}/protected
# Might want to move this to /var/data/protected?!?
# /var/www/protected (production/staging)
PROTECTED_PATH=protected
PROTECTED_ROOT=${FILE_POOL1}/${PROTECTED_PATH}

# Used by the backup/restore app deploy-fabrics to determine what should be backed up and restored.
BACKUP_MEDIA_PATHS=protected=FILE_POOL1+PROTECTED_PATH:media=FILE_POOL1+MEDIA_PATH:static=FILE_POOL1+STATIC_PATH

# Log file [ replaced by rsyslog ]
LOG_DIR=${PROJECT_PATH}/log
LOG_FILE=${LOG_DIR}/django-${PROJECT_NAME}-${DEPLOY_TYPE}.log

# Deployed Host domain dns address/ip
# This will be different on production/staging
# SITE Fully Qualified Domain name i.e. hugo.arl.arizona.edu
SITE_FQDN=localhost
# Site Host dns entry ehipprod.arl.arizona.edu
SITE_HOST=localhost
# Site host ip address (resolves to the SITE_HOST)
SITE_IP=127.0.0.1

SECRET_KEY=dogofood
NEVERCACHE_KEY=
RAVEN_DSN_URI=
# JWT_SECRET=<REPLACE ME>

PROJECT_FILE_OWNER=todd
PROJECT_FILE_GROUP=staff
DEFAULT_FILE_PERMISSIONS=0644
DEFAULT_DIR_PERMISSIONS=0755

PROJECT_WEBSERVER_OWNER=www-data
PROJECT_WEBSERVER_GROUP=www-data

PYTHON_REQUIREMENT_FILE=${PROJECT_PATH}/${DJANGO_SRC_NAME}/requirements.txt
PYTHON_SUBMODULES_FOLDER=${PROJECT_PATH}/${DJANGO_SRC_NAME}/submodules

# Local hook scripts to link to
PROJECT_POSTACTIVATE=${PROJECT_PATH}/bin/virtualenv-postactivate
PROJECT_POSTDEACTIVATE=${PROJECT_PATH}/bin/virtualenv-postdeactivate
# Local postactivate/postdeactivate hook file names (ignored by git)
LOCAL_POSTACTIVATE=${PROJECT_PATH}/bin/postactivate-local
LOCAL_POSTDEACTIVATE=${PROJECT_PATH}/bin/postdeactivate-local
# If source is enabled, will copy those to the LOCAL_POSTACTIVATE/LOCAL_POSTDEACTIVATE
# SOURCE_POSTACTIVATE=${PROJECT_PATH}/bin/postactivate-local-example
# SOURCE_POSTDEACTIVATE=${PROJECT_PATH}/bin/postdeactivate-local-example

DJANGO_ENV_HOME=${PROJECT_PATH}/envs
DJANGO_ENV_NAME=${PROJECT_NAME}-${DEPLOY_TYPE}
DJANGO_ENV_PATH=${DJANGO_ENV_HOME}/${DJANGO_ENV_NAME}

# import admins...
#ADMINS="Dave Parizek<dparizek@email.arizona.edu>;"

# Used in docker-entrypoint-init.d/0002_create_user_account.sh (DOCKER USER ACCOUNT)
DOCKER_USER=dockuser
DOCKER_USERID=1000
DOCKER_GROUPID=1000

# DJANGO DATABASE STUFF
# These are the 'default' database settings
DJANGO_DB_NAME=django${PROJECT_NAME}${DEPLOY_TYPE}
DJANGO_DB_USER=django${PROJECT_NAME}${DEPLOY_TYPE}
DJANGO_DB_PASS='password'
DJANGO_DB_HOST=localhost
DJANGO_DB_PORT=5432

# These will populate 'admin' section if present
ADMIN_DB_NAME=imon
ADMIN_DB_USER=imonuser
ADMIN_DB_PASS='password123'
ADMIN_DB_HOST=localhost
ADMIN_DB_PORT=5432

# LEGACY DATABASE
LEGACY_PG_DB=ashline_legacy
LEGACY_PG_USER=django${PROJECT_NAME}${DEPLOY_TYPE}
LEGACY_PG_PASS=''
LEGACY_PG_HOST=localhost
LEGACY_PG_PORT=5432

# DEPLOYMENT SYSTEM
PRODUCTION_SERVER=
PRODUCTION_USER=

##################
# CELERY SECTION #
##################
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=${PROJECT_NAME}-${DEPLOY_TYPE}
RABBITMQ_PASS=
RABBITMQ_VHOST=${PROJECT_NAME}-${DEPLOY_TYPE}-celery
# BROKER_URL=amqp://guest:guest@localhost:5672//
# CELERY_RESULT_BACKEND=amqp://guest:guest@localhost:5672//
CELERY_UNIX_USER=celery-${PROJECT_NAME}-${DEPLOY_TYPE}
CELERY_UNIX_GROUP=celery-${PROJECT_NAME}-${DEPLOY_TYPE}
# CURRENT CELERY UID/GID
# ASHLINE       = 10100
# ASHLINE QA    = 10101
# ASHLINE STAGE = 10102
# ASHLINE DEV   = 10103
# IMON          = 10120
# IMON QA       = 10121
# IMON STAGE    = 10122
# IMON DEV      = 10123
# KIDENGA       = 10124
# KIDENGA STAGE = 10125
# KIDENGA DEV   = 10126
# ELEAS         = 10127
# ELEAS STAGE   = 10128
# ELEAS DEV     = 10129
# ADAPT         = 10130
# ADAPT STAGE   = 10131
# ADAPT DEV     = 10132
# TXT4MED       = 10133
# TXT4MED STAGE = 10134
# TXT4MED DEV   = 10135
# MIVS          = 10136
# MIVS STAGE    = 10137
# MIVS DEV      = 10138
# LIVES         = 10139
# LIVES STAGE   = 10140
# LIVES PROD    = 10141
CELERY_UNIX_GID=10100
CELERY_UNIX_UID=10100
CELERY_RUN_DIR=/var/run/${PROJECT_NAME}-${DEPLOY_TYPE}
CELERY_LOG_DIR=/var/log/${PROJECT_NAME}-${DEPLOY_TYPE}
CELERY_TMP_DIR=/tmp/${PROJECT_NAME}-${DEPLOY_TYPE}
## Config from /etc/default/webquit-celerybeat
CELERYD_PID_FILE=${CELERY_RUN_DIR}/celery-%n.pid
CELERYD_LOG_FILE=${CELERY_LOG_DIR}/celery-%n.log
CELERYD_LOG_LEVEL='INFO'
CELERYBEAT_LOG_LEVEL='INFO'
CELERYD_SYSTEMD_DESCRIPTION="${PROJECT_NAME} ${DEPLOY_TYPE} celery service"
CELERYBEAT_SYSTEMD_DESCRIPTION="${PROJECT_NAME} ${DEPLOY_TYPE} celerybeat service"
CELERYBEAT_PID_FILE=${CELERY_RUN_DIR}/celerybeat.pid
CELERYBEAT_LOG_FILE=${CELERY_LOG_DIR}/celerybeat.log
# File based scheduler
CELERYBEAT_SCHEDULE=${CELERY_TMP_DIR}/celerybeat-schedule
CELERYD_LOG_COLOR=false

# CELERY INIT CONFIG STUFF
# REGULAR CELERY BIN
# CELERY_BIN=${DJANGO_ENV_PATH}/bin/celery
CELERY_BIN="${DJANGO_ENV_PATH}/bin/celery"
## -S django, need django celery beat setup 1st
# CELERYBEAT_OPTS="-S django  --logfile=/dev/null"
CELERYBEAT_OPTS="--schedule=${CELERYBEAT_SCHEDULE} --logfile=/dev/null"
CELERYD_NODES="worker1 worker2"
#   but you can also start multiple and configure settings
#   for each in CELERYD_OPTS (see `celery multi --help` for examples):
#CELERYD_NODES="worker1 worker2 worker3"
#   alternatively, you can specify the number of nodes to start:
#CELERYD_NODES=10
# Concurrency (number of processes run)
CELERYD_OPTS="--time-limit=7200 --concurrency=1 -E --logfile=/dev/null"
#CELERYD_OPTS="--time-limit=7200 --concurrency=8 -E"

# TWILIO number
TWILIO_PHONE_NUMBER='+15555551234'
