#!/usr/bin/env bash
# set -e

if echo $SHELL | egrep -q '^.*\/zsh$'; then
  script_dir=$(perl -e 'use File::Basename; use Cwd "abs_path"; print dirname(abs_path(@ARGV[0]));' -- "$0")
elif echo $SHELL | egrep -q '^.*\/bash$'; then
  script_dir=$(perl -e 'use File::Basename; use Cwd "abs_path"; print dirname(abs_path(@ARGV[0]));' -- "${BASH_SOURCE[0]}")
else
  echo "ERROR: no matching shell"
  return
fi

## setup required binaries
SRC_SCRIPT=${script_dir}/lib/setup-binary-vars.sh
SRC_NUM=2
if test -f ${SRC_SCRIPT}; then
  . "${SRC_SCRIPT}" || {
    echo "${SRC_SCRIPT} had an error! exiting.."
    return 1
  }
else
  echo "ERROR-${SRC_NUM}: missing ${SRC_SCRIPT}!"
  return 1
fi

## load project .env file
SRC_SCRIPT=${script_dir}/lib/load-env-vars.sh
SRC_NUM=3
if test -f ${SRC_SCRIPT}; then
  . "${SRC_SCRIPT}" || {
    echo "${SRC_SCRIPT} had an error! exiting.."
    return 1
  }
else
  echo "ERROR-${SRC_NUM}: missing ${SRC_SCRIPT}!"
  return 1
fi

## add ask-function
SRC_SCRIPT=${script_dir}/lib/functions.sh
SRC_NUM=4
if test -f ${SRC_SCRIPT}; then
  . "${SRC_SCRIPT}" || {
    echo "${SRC_SCRIPT} had an error! exiting.."
    return 1
  }
else
  echo "ERROR-${SRC_NUM}: missing ${SRC_SCRIPT}!"
  return 1
fi


if [ -z ${_VIRTUALENV_RUNNING+x} ]; then
  echo "Virtualenv already *unset*"
  return 1
else
  unset _VIRTUALENV_RUNNING

  export PYTHONPATH=$_PYTHONPATH
  unset _PYTHONPATH
  export PATH=${_PATH}
  unset _PATH

  unset PGPASSWORD

  unalias cdp
  unalias cdpd
  unalias psql_project
  unalias psql_admin
fi

if [ -f "${LOCAL_POSTDEACTIVATE}" ]; then
  source ${LOCAL_POSTDEACTIVATE}
else
  echo "No local postactivate file @ ${LOCAL_POSTDEACTIVATE}"
fi
